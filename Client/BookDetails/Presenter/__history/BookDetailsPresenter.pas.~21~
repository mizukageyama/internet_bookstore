unit BookDetailsPresenter;

interface

uses
  MainPresenterIntf, BookServiceIntf, MainFrmIntf, System.SysUtils,
  Vcl.Dialogs, MVCFramework.DataSet.Utils, MVCFramework.Serializer.Commons,
  BookstoreDM, Book, BookDetailsFrm, System.Variants, BookDetailsFrmIntf,
  System.Classes, Vcl.Graphics, Vcl.Controls, Vcl.Forms, CustomerReview,
  CustomerReviewServiceIntf, BookDetailsPresenterIntf,
  System.Generics.Collections;

type
  TBookDetailsPresenter = class(TInterfacedObject, IBookDetailsPresenter)
  private
    FBookDetailsView: IBookDetailsForm;
    FCustomerReviewServiceProxy: ICustomerReviewService;
    FBook: TBook;
  public
    constructor Create(ABookDetailsView: IBookDetailsForm;
      ABookDetailsService: ICustomerReviewService; ABook: TBook);

    procedure PopulateBookTable(const Books: TObjectList<TBook>);
    procedure DisplayBookDetails;
    procedure WriteReview;
    procedure ShowWriteReviewForm;
    procedure ShowLoginForm;
  end;

implementation

{ TBookDetailsPresenter }

uses
  WriteReviewFrm, CustomerReviewServiceProxy, WriteReviewPresenter, LoginFrm,
  LoginPresenter, CustomerSession;

procedure TBookDetailsPresenter.DisplayBookDetails;
begin
  FBookDetailsView.SetBookDetails(FBook);
end;

constructor TBookDetailsPresenter.Create(ABookDetailsView: IBookDetailsForm;
  ABookDetailsService: ICustomerReviewService; ABook: TBook);
begin
  FBookDetailsView := ABookDetailsView;
  FCustomerReviewServiceProxy := ABookDetailsService;
  FBookDetailsView.SetPresenter(Self);
  FBook := ABook;
end;

procedure TBookDetailsPresenter.ShowLoginForm;
begin
  var LoginForm := TLoginForm.Create(FBookDetailsView.Self);
  var LoginPresenter := TLoginPresenter.Create(LoginForm as TLoginForm);

  LoginPresenter.OnLoginSuccess := procedure
  begin
    ShowWriteReviewForm(Book);
  end;

  LoginForm.Show;
end;

procedure TBookDetailsPresenter.ShowWriteReviewForm(const Book: TBook);
begin
  var ReviewForm := TWriteReviewForm.Create(FBookDetailsView.Self);
  var CustomerReviewServiceProxy := TCustomerReviewServiceProxy.Create;
  var WriteReviewPresenter := TWriteReviewPresenter
    .Create(ReviewForm as TWriteReviewForm, CustomerReviewServiceProxy, Book);

  ReviewForm.Show;
end;

procedure TBookDetailsPresenter.WriteReview;
begin
  var CustomerSession := TCustomerSession.Instance;
  if CustomerSession.IsLoggedIn then
    ShowWriteReviewForm(FBook)
  else
  begin
    ShowLoginForm(FBook);
  end;
end;

end.

