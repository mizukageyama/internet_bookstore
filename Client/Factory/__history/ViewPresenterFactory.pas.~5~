unit ViewPresenterFactory;

interface

uses
  BookDetailsFrmIntf, BookDetailsPresenterIntf, Book, LoginFrmIntf,
  LoginPresenterIntf, WriteReviewFrmIntf, WriteReviewPresenterIntf,
  CustomerReviewServiceIntf;

type
  IViewPresenterFactory = class(TInterfacedObject, IViewPresenterFactory)
  public
    function CreateLoginView: ILoginView;
    function CreateLoginPresenter(ALoginViewView: ILoginView): ILoginPresenter;

    function CreateBookDetailsView: IBookDetailsView;
    function CreateBookDetailsPresenter(ABookDetailsView: IBookDetailsView;
      ABook: TBook; AViewPresenterFactory: IViewPresenterFactory):
      IBookDetailsPresenter;

    function CreateWriteReviewView: IWriteReviewView;
    function CreateWriteReviewPresenter(AWriteReviewView: IWriteReviewView;
      ACustomerReviewServiceProxy: ICustomerReviewService; ABook: TBook):
      IWriteReviewPresenter;
  end;

implementation

uses
  LoginFrm, LoginPresenter, WriteReviewFrm, WriteReviewPresenter,
  BookDetailsFrm, BookDetailsPresenter;

{ TLoginVPFactory }

function TLoginVPFactory.CreateLoginPresenter(
  ALoginViewView: ILoginView): ILoginPresenter;
begin
  var LoginPresenter := TLoginPresenter.Create(ALoginViewView);
  Result := LoginPresenter;
end;

function TLoginVPFactory.CreateLoginView: ILoginView;
begin
  Result := TLoginView.Create;
end;

end.
