unit WriteReviewVPFactory;

uses
  WriteReviewVPFactoryIntf, WriteReviewFrmIntf, WriteReviewPresenterIntf, Book;

type
  TWriteReviewVPFactory = class(TInterfacedObject, IWriteReviewVPFactory)
  public
    function CreateWriteReviewView: IWriteReviewView;
    function CreateWriteReviewPresenter(AWriteReviewView: IWriteReviewView;
      ABook: TBook): IWriteReviewPresenter;
  end;

implementation

uses
  WriteReviewFrm, WriteReviewPresenter;

{ TWriteReviewVPFactory }

//function TWriteReviewVPFactory.CreateBookDetailsPresenter(
//  BookDetailsView: IBookDetailsView; Book: TBook): IBookDetailsPresenter;
//begin
//  var BookDetailsPresenter := TBookDetailsPresenter
//    .Create(BookDetailsView, Book);
//  Result := BookDetailsPresenter;
//end;
//
//function TWriteReviewVPFactory.CreateBookDetailsView: IBookDetailsView;
//begin
//  Result := TBookDetailsView.Create(nil);
//end;

end.
