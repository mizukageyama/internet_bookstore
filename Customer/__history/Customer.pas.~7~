unit Customer;

interface

uses
  MVCFramework.Serializer.Commons,
  MVCFramework.ActiveRecord,
  MVCFramework.Nullables,
  MVCFramework.Commons,
  MVCFramework.SQLGenerators.MySQL,
  System.Generics.Collections;

type
  [MVCNameCase(ncCamelCase)]
  [MVCTable('customer')]
  TBook = class(TMVCActiveRecord)
  private
    [MVCTableField('ID', [foPrimaryKey, foAutoGenerated])]
    FId: Integer;
    [MVCTableField('FIRST_NAME')]
    FFirstName: string;
    [MVCTableField('LAST_NAME')]
    FLastName: string;
    [MVCTableField('EMAIL')]
    FEmail: string;
    [MVCTableField('PASSWORD')]
    FPassword: string;
  public
    function IsValid: Boolean;
    property Id: Integer read FId write FId;
    property FirstName: string read FFirstName write FFirstName;
    property LastName: string read FLastName write FLastName;
    property Email: string read FEmail write FEmail;
    property Password: string read FPassword write FPassword;
  end;

implementation

{ TBook }

function TBook.IsValid: Boolean;
begin
  Result := (FirstName <> '') and
    (LastName <> '') and
    (Email <> '') and
    (Password <> '');
end;

end.
