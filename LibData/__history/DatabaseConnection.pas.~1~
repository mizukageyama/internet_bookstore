unit DatabaseConnection;


interface

uses
  FireDAC.Comp.Client;

type
  TBookActiveRecordDAO = class
  private
    class var FInstance: TBookActiveRecordDAO;
    FConnection: TFDConnection;
  public
    constructor Create;
    destructor Destroy; override;
    class function GetInstance: TBookActiveRecordDAO;
    property Connection: TFDConnection read FConnection;
  end;

implementation

{ TBookActiveRecordDAO }

constructor TBookActiveRecordDAO.Create;
begin
  var LConn := TFDConnection.Create(nil);
  LConn.ConnectionDefName := 'Internet_Bookstore_Connection';
  ActiveRecordConnectionsRegistry.AddDefaultConnection(LConn, True);
end;

destructor TBookActiveRecordDAO.Destroy;
begin
  FConnection.Free;
  inherited;
end;

class function TBookActiveRecordDAO.GetInstance: TBookActiveRecordDAO;
begin
  if not Assigned(FInstance) then
    FInstance := TBookActiveRecordDAO.Create;
  Result := FInstance;
end;

end.
