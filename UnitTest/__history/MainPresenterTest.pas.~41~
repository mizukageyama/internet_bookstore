unit MainPresenterTest;

interface

uses
  DUnitX.TestFramework, MainPresenterIntf, MockBookTableDatabase,
  ViewPresenterFactoryIntf, MainFrmIntf, BookServiceIntf;

type
  [TestFixture]
  TMainPresenterTest = class
  private
    FMainPresenter: IMainPresenter;
    FViewPresenterFactoryStub: IViewPresenterFactory;
    FMainViewStub: IMainView;
    FBookServiceProxy: IBookService;
  public
    [Setup]
    procedure Setup;
    [TearDown]
    procedure TearDown;

    [Test]
    procedure Test_LoadBooks_BookList_NotEmpty;
    [Test]
    procedure Test_ShowBookDetails_BookDetailsView_NotNil;
  end;

implementation

uses
  BookActiveRecordDaoStub, BookService, ViewPresenterFactoryStub;

procedure TMainPresenterTest.SetUp;
begin
  inherited;
  FViewPresenterFactoryStub := TViewPresenterFactoryStub.Create;
  FMainViewStub := FViewPresenterFactoryStub.CreateMainView;
  var MockDatabase := TMockBookTableDatabase.Create;
  var MockBookDao := TBookActiveRecordDaoStub.Create(MockDatabase);
  FBookServiceProxy := TBookService.Create(MockBookDao);
  FMainPresenter := FViewPresenterFactoryStub.CreateMainPresenter(
    FMainViewStub, FBookServiceProxy, FViewPresenterFactoryStub);
end;

procedure TMainPresenterTest.TearDown;
begin
  FMainPresenter := nil;
  FMainViewStub := nil;
  FBookServiceProxy := nil;
  inherited;
end;

procedure TMainPresenterTest.Test_LoadBooks_BookList_NotEmpty;
begin
  FMainPresenter.LoadBooks;
  var BookList := FMainPresenter.GetBookList;

  Assert.IsTrue(BookList.Count > 0);
end;

procedure TMainPresenterTest.Test_ShowBookDetails_BookDetailsView_NotNil;
begin

end;

initialization
  TDUnitX.RegisterTestFixture(TMainPresenterTest);

end.
